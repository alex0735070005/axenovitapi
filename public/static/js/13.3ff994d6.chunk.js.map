{"version":3,"sources":["components/modules/admin/TabPanel/styles.module.scss","components/pages/Admin/styles.module.scss","components/modules/admin/TabPanel/TabPanel.jsx","components/modules/admin/TableSorting/components/EnhancedTableHead.jsx","components/modules/admin/TableSorting/components/EnhancedTableToolbar/styles.js","components/modules/admin/TableSorting/components/EnhancedTableToolbar/EnhancedTableToolbar.jsx","components/modules/admin/TableSorting/styles.js","components/modules/admin/TableSorting/helpers.js","components/modules/admin/TableSorting/TableSorting.jsx","components/modules/admin/Users/store/reducer.js","components/modules/admin/Users/store/config.js","components/modules/admin/Users/UsersContainer.jsx","components/modules/admin/Users/helpers.js","components/modules/admin/Users/store/actionsTypes.js","components/pages/Admin/styles.js","components/pages/Admin/helpers.js","components/pages/Admin/index.jsx"],"names":["module","exports","TabPanel","props","children","value","index","other","Typography","className","styles","tabPanel","component","role","hidden","id","aria-labelledby","Box","box","headCells","numeric","disablePadding","label","EnhancedTableHead","classes","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","useToolbarStyles","Toolbar","clsx","variant","Tooltip","IconButton","aria-label","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","desc","a","b","EnhancedTable","rows","useStyles","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","Paper","length","TableContainer","Table","size","target","newSelecteds","n","TableBody","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","aria-checked","tabIndex","scope","username","email","verify","roles","join","api_key","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","initialState","users","state","action","payload","UsersContext","createContext","UsersProvider","useReducer","reducer","store","dispatch","Provider","Component","connect","useContext","axios","get","then","data","fetchUsers","TableSorting","useTabStyles","controlProps","Admin","tabClasses","setValue","orientation","window","innerWidth","Tabs","newValue","tabs","Tab","icon"],"mappings":"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","file":"static/js/13.3ff994d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"styles_box__1dlOK\",\"tabPanel\":\"styles_tabPanel__3_QOX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__3b7Xq\",\"tabPanel\":\"styles_tabPanel__16PyR\",\"tabs\":\"styles_tabs__p2GYB\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport styles from './styles.module.scss';\n\nconst TabPanel = props => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      className={styles.tabPanel}\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box className={styles.box}>{children}</Box>}\n    </Typography>\n  );\n};\n\nTabPanel.propTypes = {\n  children: PropTypes.node.isRequired,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nexport default TabPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nconst headCells = [\n  {\n    id: 'username',\n    numeric: false,\n    disablePadding: true,\n    label: 'Username',\n  },\n  { id: 'id', numeric: true, disablePadding: false, label: 'Id' },\n  { id: 'email', numeric: true, disablePadding: false, label: 'Email' },\n  { id: 'verify', numeric: true, disablePadding: false, label: 'Status' },\n  { id: 'role', numeric: true, disablePadding: false, label: 'Role' },\n  { id: 'api_key', numeric: true, disablePadding: false, label: 'Api key' },\n];\n\nconst EnhancedTableHead = props => {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nEnhancedTableHead.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","import { makeStyles, lighten } from '@material-ui/core/styles';\n\nexport default makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport useToolbarStyles from './styles';\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected}\n          selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Users\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableToolbar;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: '100%',\n    width: '100%',\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n","export const desc = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n};\n\nexport const stableSort = (array, cmp) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n};\n\nexport const getSorting = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport EnhancedTableHead from './components/EnhancedTableHead';\nimport EnhancedTableToolbar from './components/EnhancedTableToolbar';\nimport useStyles from './styles';\n\nimport { stableSort, getSorting } from './helpers';\n\nconst EnhancedTable = ({ rows }) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('id');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = id => selected.indexOf(id) !== -1;\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.id)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.username}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.id}</TableCell>\n                      <TableCell align=\"right\">{row.email}</TableCell>\n                      <TableCell align=\"right\">\n                        {row.verify ? 'verify' : 'not verify'}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {row.roles.join(', ')}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.api_key}</TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n};\n\nEnhancedTable.propTypes = {\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default EnhancedTable;\n","export const SET_USERS = 'SET_USERS';\n\nexport const initialState = {\n  users: [],\n};\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_USERS: {\n      const { users } = action.payload;\n      return {\n        ...state,\n        users,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/prop-types */\nimport React, { useReducer, createContext, useContext } from 'react';\nimport reducer, { initialState } from './reducer';\n\nconst UsersContext = createContext(initialState);\n\n// useStore will be used in React components to fetch and mutate state\nexport const useUsersStore = () => useContext(UsersContext);\n\nexport const UsersProvider = ({ children }) => {\n  const [store, dispatch] = useReducer(reducer, initialState);\n  return (\n    <UsersContext.Provider value={{ store, dispatch }}>\n      {children}\n    </UsersContext.Provider>\n  );\n};\n\nexport default function connect(Component) {\n  return props => (\n    <UsersProvider>\n      <Component {...props} />\n    </UsersProvider>\n  );\n}\n","import React, { useState } from 'react';\nimport TableSorting from 'components/modules/admin/TableSorting';\nimport connect, { useUsersStore } from './store/config';\nimport { fetchUsers } from './helpers';\n\nconst Users = () => {\n  const { store, dispatch } = useUsersStore();\n  const { users } = store;\n\n  useState(() => fetchUsers(dispatch));\n\n  return <TableSorting rows={users} />;\n};\n\nexport default connect(Users);\n","import axios from 'axios';\nimport { setUsersAction } from './store/actionsTypes';\n\nexport const fetchUsers = dispatch =>\n  axios.get('/admin/users').then(({ data }) => {\n    dispatch(setUsersAction(data.users));\n  });\n\nexport const testFunction = () => 'test function';\n","/* eslint-disable import/prefer-default-export */\nimport { SET_USERS } from './reducer';\n\nexport const setUsersAction = users => ({\n  type: SET_USERS,\n  payload: {\n    users,\n  },\n});\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useTabStyles = makeStyles(() => ({\n  root: {\n    minWidth: '100px',\n    padding: 0,\n    margin: '0 15px 5px 0',\n    border: '1px solid #ddd',\n  },\n}));\n","// eslint-disable-next-line import/prefer-default-export\nexport const controlProps = index => {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n};\n","import React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport TabPanel from 'components/modules/admin/TabPanel';\nimport GroupIcon from '@material-ui/icons/Group';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport Users from 'components/modules/admin/Users';\nimport { useTabStyles } from './styles';\nimport { controlProps } from './helpers';\nimport styles from './styles.module.scss';\n\nconst Admin = () => {\n  const tabClasses = useTabStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const orientation = window.innerWidth > 1140 ? 'vertical' : 'horizontal';\n\n  return (\n    <div className={styles.root}>\n      <Tabs\n        variant=\"scrollable\"\n        orientation={orientation}\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        className={styles.tabs}\n      >\n        <Tab\n          classes={tabClasses}\n          label=\"Users\"\n          icon={<GroupIcon />}\n          {...controlProps(0)}\n        />\n        <Tab\n          classes={tabClasses}\n          label=\"Analytics\"\n          icon={<AssessmentIcon />}\n          {...controlProps(1)}\n        />\n      </Tabs>\n      <TabPanel className={styles.tabPanel} value={value} index={0}>\n        <Users />\n      </TabPanel>\n      <TabPanel className={styles.tabPanel} value={value} index={1}>\n        Analytics info\n      </TabPanel>\n    </div>\n  );\n};\n\nexport default Admin;\n"],"sourceRoot":""}